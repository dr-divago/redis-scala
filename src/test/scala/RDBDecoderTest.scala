import codecrafters_redis.protocol.RDBDecoder
import org.scalatest.funsuite.AnyFunSuite

import java.nio.file.{Files, Paths}
import java.time.Instant

class RDBDecoderTest extends AnyFunSuite {

  test("RDS file is a redis db") {
    val fileByte = Files.readAllBytes(Paths.get("dump.rdb"))
    assert(RDBDecoder.isRedisRDB(fileByte))
  }

  test("Find index for RDS FA section") {
    val fileByte = Files.readAllBytes(Paths.get("dump.rdb"))
    assert(9 == RDBDecoder.findMetadata(fileByte))
  }

  test("Find index for RDS FE section") {
    val fileByte = Files.readAllBytes(Paths.get("dump.rdb"))
    assert(79 == RDBDecoder.findStartDB(fileByte))
  }

  test("Find size hashtable") {
    val fileByte = Files.readAllBytes(Paths.get("dump.rdb"))
    assert(1 == RDBDecoder.sizeHashTable(fileByte))
  }

  test("Find key in the hash") {
    val fileByte = Files.readAllBytes(Paths.get("dump.rdb"))
    val l = RDBDecoder.readKeyValue(fileByte)
    assert("mykey" == l.head._1)
    assert("myval" == l.head._2)
  }

  test("Find keys in db with many keys") {
    val fileByte = Files.readAllBytes(Paths.get("redis-db-key.rdb"))
    val l = RDBDecoder.readKeyValue(fileByte)
    assert("mykey" == l.head._1)
    assert("myval" == l.head._2)
  }

  test("Find key with expiration") {
    val fileByte = Files.readAllBytes(Paths.get("redis-with-ex.rdb"))
    val expireSec = RDBDecoder.readKeyValue(fileByte)

    println(expireSec)
  }

  test("Find keys from expiration db") {
    val bytes: Array[Byte] = Array(
      0x52, 0x45, 0x44, 0x49, 0x53, 0x30, 0x30, 0x31, 0x31, 0xfa.toByte, 0x0a, 0x72, 0x65, 0x64, 0x69, 0x73,
      0x2d, 0x62, 0x69, 0x74, 0x73, 0xc0.toByte, 0x40, 0xfa.toByte, 0x09, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2d, 0x76,
      0x65, 0x72, 0x05, 0x37, 0x2e, 0x32, 0x2e, 0x30, 0xfe.toByte, 0x00, 0xfb.toByte, 0x04, 0x04, 0xfc.toByte, 0x00, 0x9c.toByte,
      0xef.toByte, 0x12, 0x7e, 0x01, 0x00, 0x00, 0x00, 0x09, 0x72, 0x61, 0x73, 0x70, 0x62, 0x65, 0x72, 0x72,
      0x79, 0x05, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0xfc.toByte, 0x00, 0x0c, 0x28, 0x8a.toByte, 0xc7.toByte, 0x01, 0x00, 0x00,
      0x00, 0x09, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x06, 0x6f, 0x72, 0x61, 0x6e,
      0x67, 0x65, 0xfc.toByte, 0x00, 0x0c, 0x28, 0x8a.toByte, 0xc7.toByte, 0x01, 0x00, 0x00, 0x00, 0x04, 0x70, 0x65, 0x61,
      0x72, 0x09, 0x62, 0x6c, 0x75, 0x65, 0x62, 0x65, 0x72, 0x72, 0x79, 0xfc.toByte, 0x00, 0x0c, 0x28, 0x8a.toByte,
      0xc7.toByte, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x77, 0x62, 0x65, 0x72, 0x72, 0x79,
      0x09, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x70, 0x70, 0x6c, 0x65, 0xff.toByte, 0x8d.toByte, 0x5a, 0x85.toByte, 0x8c.toByte, 0xac.toByte,
      0xf3.toByte, 0x20, 0x0b, 0x0a
    )

    val expireSec = RDBDecoder.readKeyValue(bytes)
  }

  test("Find keys from expiration")  {
    val bytes = Array[Byte](0x52.toByte, 0x45.toByte, 0x44.toByte, 0x49.toByte, 0x53.toByte, 0x30.toByte, 0x30.toByte,
      0x31.toByte, 0x31.toByte, 0xfa.toByte, 0x09.toByte, 0x72.toByte, 0x65.toByte, 0x64.toByte, 0x69.toByte, 0x73.toByte,
      0x2d.toByte, 0x76.toByte, 0x65.toByte, 0x72.toByte, 0x05.toByte, 0x37.toByte, 0x2e.toByte, 0x32.toByte, 0x2e.toByte,
      0x30.toByte, 0xfa.toByte, 0x0a.toByte, 0x72.toByte, 0x65.toByte, 0x64.toByte, 0x69.toByte, 0x73.toByte, 0x2d.toByte,
      0x62.toByte, 0x69.toByte, 0x74.toByte, 0x73.toByte, 0xc0.toByte, 0x40.toByte, 0xfe.toByte, 0x00.toByte, 0xfb.toByte,
      0x05.toByte, 0x05.toByte, 0xfc.toByte, 0x00.toByte, 0x9c.toByte, 0xef.toByte, 0x12.toByte, 0x7e.toByte, 0x01.toByte,
      0x00.toByte, 0x00.toByte, 0x00.toByte, 0x04.toByte, 0x70.toByte, 0x65.toByte, 0x61.toByte, 0x72.toByte, 0x0a.toByte,
      0x73.toByte, 0x74.toByte, 0x72.toByte, 0x61.toByte, 0x77.toByte, 0x62.toByte, 0x65.toByte, 0x72.toByte, 0x72.toByte,
      0x79.toByte, 0xfc.toByte, 0x00.toByte, 0x0c.toByte, 0x28.toByte, 0x8a.toByte, 0xc7.toByte, 0x01.toByte, 0x00.toByte,
      0x00.toByte, 0x00.toByte, 0x09.toByte, 0x62.toByte, 0x6c.toByte, 0x75.toByte, 0x65.toByte, 0x62.toByte, 0x65.toByte,
      0x72.toByte, 0x72.toByte, 0x79.toByte, 0x09.toByte, 0x72.toByte, 0x61.toByte, 0x73.toByte, 0x70.toByte, 0x62.toByte,
      0x65.toByte, 0x72.toByte, 0x72.toByte, 0x79.toByte, 0xfc.toByte, 0x00.toByte, 0x0c.toByte, 0x28.toByte, 0x8a.toByte,
      0xc7.toByte, 0x01.toByte, 0x00.toByte, 0x00.toByte, 0x00.toByte, 0x05.toByte, 0x6d.toByte, 0x61.toByte, 0x6e.toByte,
      0x67.toByte, 0x6f.toByte, 0x09.toByte, 0x70.toByte, 0x69.toByte, 0x6e.toByte, 0x65.toByte, 0x61.toByte, 0x70.toByte,
      0x70.toByte, 0x6c.toByte, 0x65.toByte, 0xfc.toByte, 0x00.toByte, 0x0c.toByte, 0x28.toByte, 0x8a.toByte, 0xc7.toByte,
      0x01.toByte, 0x00.toByte, 0x00.toByte, 0x00.toByte, 0x09.toByte, 0x72.toByte, 0x61.toByte, 0x73.toByte, 0x70.toByte,
      0x62.toByte, 0x65.toByte, 0x72.toByte, 0x72.toByte, 0x79.toByte, 0x05.toByte, 0x67.toByte, 0x72.toByte, 0x61.toByte,
      0x70.toByte, 0x65.toByte, 0xfc.toByte, 0x00.toByte, 0x0c.toByte, 0x28.toByte, 0x8a.toByte, 0xc7.toByte, 0x01.toByte,
      0x00.toByte, 0x00.toByte, 0x00.toByte, 0x05.toByte, 0x67.toByte, 0x72.toByte, 0x61.toByte, 0x70.toByte, 0x65.toByte,
      0x05.toByte, 0x6d.toByte, 0x61.toByte, 0x6e.toByte, 0x67.toByte, 0x6f.toByte, 0xff.toByte)

    val res = RDBDecoder.readKeyValue(bytes)
    println(res)
  }
}

